spring:
  application:
    name: authn-service
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:auth_service}
    username: ${DB_USER:auth_user}
    password: ${DB_PASSWORD:auth_pass}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  flyway:
    enabled: true
    locations: ${FLYWAY_LOCATIONS:filesystem:db/migration}
  data:
    redis:
      url: ${REDIS_DATASOURCE_URL:redis://localhost:6379}
  security:
    user:
      name: ecom
      password: ecom
      roles:
        - ADMIN
server:
  port: 8501
eureka:
  client:
    initial-instance-info-replication-interval-seconds: 10  # Default is 40
    registry-fetch-interval-seconds: 10  # Default is 30
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka} # Discovery Server Address

  instance:
    preferIpAddress: true
    lease-renewal-interval-in-seconds: 5 # Heartbeat interval - DO NOT DO THIS IN PRODUCTION
feign:
  httpclient:
    enabled: false
  java-http:
    enabled: true
    connect-timeout: 5s
    read-timeout: 10s

app:
  s2s-comm:
    # Generate a Base64 encoded 256-bit (32-byte) random key by command: openssl rand -base64 32
    secret: ${APP_S2S_COMM_SECRET:0CtrGzxWwSOJ6bwyvxyf8eSHjbs0z6gfCUyb7U243zc=}
  jwt:
    # Generate a Base64 encoded 256-bit (32-byte) random key by command: openssl rand -base64 32
    secret: ${APP_JWT_SECRET:IX5kf1/J8adOLK81NhtQMRHPdX3S85fbf82TefA6Iuc=}
    expiration-ms: 900000  # 15 minutes in milliseconds
  client-fp:
    # Generate a Base64 encoded 128-bit (16-byte) random key by command: openssl rand -base64 16
    salt: ${APP_CLIENT_FP_SALT:XrAl3NgHvNyR5p7MtHl2Ug==}